(function (e) { var t = { init: function (t) { for (var n in t) { if (t.hasOwnProperty(n)) { if (n.indexOf("$") === 0) { var r = n.replace("$", ""); if (t.hasOwnProperty(r)) { var i = t[n]; var s = e("#" + r); if (s.length == 1) { if (t[r]) s.val(t[r]); if (i.hasOwnProperty("label")) { s.wrap("<label>" + i["label"] + "</label>") } if (i.hasOwnProperty("placeholder")) { s.attr("placeholder", i["placeholder"]) } if (i.hasOwnProperty("required") && i["required"] === true) { s.attr("required", "true") } if (i.hasOwnProperty("autofocus") && i["autofocus"] === true) { s.attr("autofocus", "true"); s.focus() } s.on("keyup", function () { t[e(this).attr("id")] = e(this).val() }); s.on("blur", function () { var n = e(this); var r = n.val(); if (!r || r == "") return; var i = t["$" + n.attr("id")]; if (i.validate) { var s = i.pattern; var o = ""; switch (s) { default: o = s; break; case "alpha": o = /^[a-zA-Z ]*$/; break; case "alphanumeric": o = /^[a-zA-Z0-9 ]*$/; break; case "integer": o = /^d+$/; break; case "money": o = /^\$?\d+(,\d{3})*(\.\d*)?$/; break; case "number": o = /^[+]?([0-9]+(?:[\.][0-9]*)?|\.[0-9]+)$/; break; case "card": o = /[0-9]{13,19}|([0-9- ]{3,8}){3,6}/; break; case "cvv": o = /^[0-9]{3,4}$/; break; case "email": o = /^(([^<>()[\]\\.,;:\s@\"]+(\.[^<>()[\]\\.,;:\s@\"]+)*)|(\".+\"))@((\[[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\])|(([a-zA-Z\-0-9]+\.)+[a-zA-Z]{2,}))$/; break; case "url": o = /[-a-zA-Z0-9@:%_\+.~#?&//=]{2,256}\.[a-z]{2,4}\b(\/[-a-zA-Z0-9@:%_\+.~#?&//=]*)?/gi; break; case "domain": o = /^(?!:\/\/)([a-zA-Z0-9]+\.)?[a-zA-Z0-9][a-zA-Z0-9-]+\.[a-zA-Z]{2,6}?$/i; break; case "date": o = /^\d{2}[./-]\d{2}[./-]\d{4}$/; break; case "time": o = /^(0?[1-9]|1[012])(:[0-5]\d) [APap][mM]$/; break; case "color": o = /^#([0-9a-f]{3}|[0-9a-f]{6})$/i; break; case "phone": o = /^(?:(?:\+?1\s*(?:[.-]\s*)?)?(?:\(\s*([2-9]1[02-9]|[2-9][02-8]1|[2-9][02-8][02-9])\s*\)|([2-9]1[02-9]|[2-9][02-8]1|[2-9][02-8][02-9]))\s*(?:[.-]\s*)?)?([2-9]1[02-9]|[2-9][02-9]1|[2-9][02-9]{2})\s*(?:[.-]\s*)?([0-9]{4})(?:\s*(?:#|x\.?|ext\.?|extension)\s*(\d+))?$/; break } if (!r.match(o)) { n.attr("invalid", "true"); n.parent().find(".error").remove(); if (i.errorClass) { var u = i.errorMessage ? i.errorMessage : i.label + (i.required ? " is required " : "") + " and should be (a/an) " + i.pattern + "."; n.after("<span class='" + i.errorClass + "'>" + u + "</span>") } } else { n.removeAttr("invalid"); if (i.errorClass) { n.parent().find(".error").remove() } } } }) } } } } } } }; e.fn.annotate = function (e) { if (t[e]) { return t[e].apply(this, Array.prototype.slice.call(arguments, 1)) } else if (typeof e === "object" || !e) { return t.init.apply(this, arguments) } else { return } } })(jQuery)